// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "1":
            case "level1":return tiles.createTilemap(hex`100010000a01040104010303030301010101010b020202020202020201030301010a040102020101020202020a0101040101010102020401020202020202020202020203020204010202020202020202020202030202010102020404010102020802020102020202020204040405020208020203020202020202090404050202080202010202070102020404040502020202020102020101020202020202020202020201020204010202020202020208050202010202040401010101010202020202020102020107010406010102020202020203020204040104040101020203030a03010202020202020202020202010303030302020202020202020202020a03030303`, img`
2 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . . . . . 2 2 2 2 . 2 2 2 
. . 2 2 . . . . 2 2 2 2 . 2 2 2 
. . 2 2 . . . . . . . . . . . 2 
. . 2 2 . . . . . . . . . . . 2 
. . 2 2 . . 2 2 2 2 . . 2 . . 2 
. . . . . . 2 2 2 2 . . 2 . . 2 
. . . . . . 2 2 2 2 . . 2 . . 2 
. . 2 2 . . 2 2 2 2 . . . . . 2 
. . 2 2 . . . . . . . . . . . 2 
. . 2 2 . . . . . . . 2 2 . . 2 
. . 2 2 2 2 2 2 2 . . . . . . 2 
. . 2 2 2 2 2 2 2 . . . . . . 2 
. . 2 2 2 2 2 2 2 . . 2 2 2 2 2 
. . . . . . . . . . . 2 2 2 2 2 
. . . . . . . . . . . 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.castle.tilePath5,sprites.castle.tileGrass1,sprites.castle.tileGrass3,sprites.builtin.forestTiles0,sprites.castle.shrub,sprites.castle.saplingPine,sprites.castle.rock2,sprites.castle.rock0,sprites.castle.saplingOak,sprites.dungeon.darkGroundCenter], TileScale.Sixteen);
            case "2":
            case "level3":return tiles.createTilemap(hex`1000100009090909090b0b0b0b0b0b0b0a0a0a0a0909090909090b0b0b0b0b0b0a0a0a0a040409090202010202020402040a0a0a040409090202020202020404040a0a0a040409090b0b0b0b0b0b0b0b0b0a0a0a040409090b0b0b0b0b090909090a0a0a04040909020203030202030909060601040409090202030302020309090606060404090901010308020204090902070604040909020101010102030909070707040409090201010101010309090207020404090909090909090909090906070604040909090909090909090909060606020209090909090909090909090303060202020202020202020405030606060606060606060606060606060606030306`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 . . 2 2 2 2 2 2 2 2 2 . . . 
2 2 . . 2 2 2 2 2 2 2 2 2 . . . 
2 2 . . . . . . . . . . . . . . 
2 2 . . . . . . . . . . . . . . 
2 2 . . 2 2 2 2 2 2 2 . . 2 2 2 
2 2 . . 2 2 2 2 2 2 2 . . 2 2 2 
2 2 . . 2 2 . . 2 2 2 . . 2 2 2 
2 2 . . 2 2 . 2 2 2 2 . . 2 2 2 
2 2 . . 2 2 . 2 2 2 2 . . 2 2 2 
2 2 . . . . . . . . . . . 2 2 2 
2 2 . . . . . . . . . . . 2 2 2 
2 2 . . . . . . . . . . . 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.castle.shrub,sprites.castle.saplingOak,sprites.castle.saplingPine,sprites.castle.rock1,sprites.castle.rock2,sprites.castle.rock0,sprites.dungeon.collectibleBlueCrystal,sprites.castle.tileDarkGrass3,sprites.castle.tileDarkGrass2,sprites.castle.tileDarkGrass1], TileScale.Sixteen);
            case "3":
            case "level4":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 . . . . . . . . . . . . . 
2 2 2 . . . . . . . . . . . . . 
2 2 2 . . 2 2 . . 2 2 2 2 2 . . 
2 . . . . 2 2 . . 2 2 2 2 2 . . 
2 . . . . 2 2 . . 2 2 2 2 2 . . 
2 . . 2 2 . . . . 2 2 2 2 2 . . 
2 . . 2 2 . 2 . . 2 2 . . . . . 
2 . . 2 2 2 2 . . 2 2 . . . . . 
. . . . . . . . . . . . . 2 2 2 
. . . . . . . . . . . . . 2 2 2 
. . 2 2 2 2 2 . . 2 2 2 2 2 2 2 
. . 2 2 2 2 2 . . 2 2 2 2 2 2 2 
. . 2 2 2 2 2 . . 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.coral0,sprites.builtin.oceanDepths4,sprites.builtin.oceanDepths3,sprites.builtin.oceanDepths0,sprites.builtin.oceanDepths7,sprites.dungeon.collectibleInsignia,sprites.builtin.oceanDepths1,sprites.dungeon.chestOpen,sprites.dungeon.collectibleBlueCrystal], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 2 2 2 2 . . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 . . . 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.crowd4,sprites.builtin.crowd5,sprites.builtin.crowd3,sprites.builtin.crowd1,sprites.builtin.crowd0,sprites.builtin.crowd6,sprites.dungeon.darkGroundCenter,sprites.builtin.brick], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . 2 2 2 
. . . . . . . . . . . . . 2 2 2 
. . 2 2 . . 2 2 2 2 2 . . 2 2 2 
. . 2 2 . . 2 2 2 2 2 . . 2 2 2 
. . 2 2 . . 2 2 2 2 2 . . 2 2 2 
. . 2 2 . . 2 2 2 2 2 . . 2 2 2 
. . 2 2 . . . . . . . . . 2 2 2 
. . . . . . . . . . . . . . . . 
. . . . . . 2 . . 2 2 . . . . . 
. . 2 2 . . 2 . . 2 2 . . 2 . . 
. . 2 2 . . 2 . . 2 2 . . 2 . . 
. . 2 2 . . 2 . . 2 2 . . 2 . . 
. . 2 2 . . . . . . . . . 2 . . 
. . 2 2 . . . . . . . . . . . . 
. . . . . . 2 2 2 2 2 2 . . . . 
. . . . . . 2 2 2 2 2 2 . . . . 
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.chestClosed,sprites.builtin.oceanDepths9,sprites.builtin.oceanDepths0,sprites.dungeon.chestOpen], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . 2 . . 2 2 2 2 . . 2 2 2 . . 
. . 2 . . 2 2 2 2 . . 2 2 2 . . 
. . . . . . . . . . . 2 2 2 . . 
. . . . . . . . . . . 2 2 2 . . 
2 2 2 . . 2 . . 2 . . . . . . . 
2 2 2 . . 2 . . 2 . . . . . . . 
2 2 2 . . 2 . . 2 2 . . 2 2 . . 
2 2 2 . . 2 . . 2 2 . . 2 2 . . 
2 2 2 . . 2 . . 2 2 . . . . . . 
2 2 2 . . 2 . . 2 2 . . . . . . 
2 2 2 . . . . . . . . . . . . . 
2 2 2 . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.collectibleInsignia,sprites.builtin.coral5,sprites.builtin.coral0,sprites.builtin.coral3,sprites.builtin.coral4,sprites.builtin.oceanDepths9], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 . . . . . . 
2 2 2 2 2 2 2 2 2 2 . . . . . . 
2 2 2 2 2 2 2 2 2 2 . . 2 2 . . 
. . . . . . . . . . . . 2 2 . . 
. . . . . . . . . . . . 2 2 . . 
. . 2 2 2 2 . . 2 2 2 2 2 2 . . 
. . 2 2 2 2 . . 2 2 2 2 . 2 . . 
. . 2 2 2 2 . . 2 2 . . . . . . 
. . 2 2 2 2 . . 2 2 . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 . . . 2 2 2 . . 
2 2 2 2 2 2 2 2 . . . 2 2 2 . . 
2 2 2 2 2 2 2 2 . . . 2 2 2 . . 
2 2 2 2 2 2 2 2 . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tilePath5,sprites.castle.tileGrass3,sprites.castle.tileGrass1,sprites.dungeon.darkGroundCenter], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 . . . . . . . . . . . . . 
2 2 . . . . . . . . . 2 2 2 . . 
2 2 . . 2 2 2 2 2 2 2 2 2 2 . . 
2 2 . . 2 2 2 2 2 2 2 2 2 . . . 
2 2 . . 2 2 2 2 2 2 2 . . . . . 
2 2 . . . . . . . . . . . . . . 
2 2 . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 . . . . . . . . 
2 2 2 2 2 2 2 2 . . . . . . . . 
. . . . . . 2 2 . . . . . . . . 
. . . . . . 2 2 . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileDarkGrass3,sprites.castle.tileDarkGrass2,sprites.castle.tileDarkGrass1,sprites.builtin.forestTiles0,sprites.dungeon.collectibleInsignia], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
